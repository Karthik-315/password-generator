// Variables
const passwordLength = document.querySelector(".char-range");
const minRange = document.querySelector(".min-range");
const maxRange = document.querySelector(".max-range");
const passwordBox = document.querySelector("#password-output");
const generate = document.querySelector(".generate-password");
const passwordTitle = document.querySelector(".your-password");
const githubLink = document.querySelector(".github-page");

//Initial char set from which random password will be generated.
var characterSet =
	"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%(_";

// Event listeners
document.addEventListener("DOMContentLoaded", () => {
    //Once DOM is loaded initial preferences are set.
	setPreferences();

	generate.addEventListener("click", function () {
		generatePassword(characterSet); //Generates random password (Duh!)
	});
});

// Functions
function setPreferences() {

    //Password character range.
	passwordLength.min = 8;
	passwordLength.max = 56;

    //Default character length value is calculated by below formula designed by SK (Me). The same is dispalyed.
	passwordLength.value =
		(Number(passwordLength.min) + Number(passwordLength.max)) / 3;

	minRange.innerHTML = passwordLength.min;
	maxRange.innerHTML = passwordLength.max;

    //My GitHub link is set by JS. Target is set to blank to open link in new tab.
	githubLink.href = "https://github.com/Karthik-315";
	githubLink.target = "_blank";
}

function generatePassword(charSet) {
	var randomPass = "";
	var characterLength = charSet.length;

    //Password length is set from the input field.
	var passLen = passwordLength.value;

	if (passLen != "") {
		passwordTitle.innerHTML =
			"Your random password of length <strong>" + passLen + "</strong>: ";
	} else {
		passwordTitle.innerHTML = "Your random password:";
	}

    //A random character from character set is fetched and appended the same number of times as the password length.
	for (var i = 0; i < passLen; i++) {
		randomPass += charSet.charAt(Math.floor(Math.random() * characterLength));
	}

    //Checks if password has a decent combination of all types of characters and psychopaths.
	checkPasswordSanity(randomPass);
}

function checkPasswordSanity(inPassword) {

    /*
    1. Checks for character count for each char type. 
    2. If any of it is insufficient (less than 2 chars by default), redo the operation, else display password.
    3. WubbaLubbaDubDub!
     */

	var specCharsCount = inPassword.replace(/[^!@#$%(_]/g, "").length;
	var digitsCount = inPassword.replace(/[^0-9]/g, "").length;
	var lowerCaseCount = inPassword.replace(/[^a-z]/g, "").length;
	var upperCaseCount = inPassword.replace(/[^A-Z]/g, "").length;
	var minCharLimit = 2;

	/*
	If password length is too low, set char limit to 1, to avoid Maximum call stack size exceeded error.
	Will fix / Find a better work around later
	(https://giphy.com/gifs/disneyplus-disney-wandavision-wanda-vision-6ra84Uso2hoir3YCgb).
	*/

	if(inPassword.length <= 12){
		var minCharLimit = 1;
	}

	if (
		specCharsCount <= minCharLimit ||
		digitsCount <= minCharLimit ||
		lowerCaseCount <= minCharLimit ||
		upperCaseCount <= minCharLimit
	) {
		generatePassword(characterSet);
	} else {
		passwordBox.value = inPassword;
	}
}


/* 
**************** IMPORTANT NOTE ****************

If you use password(s) generated by this app, it is essential for you to share the password and the corresponding username with me.
Should you fail, you WILL face bad luck for the next 7 seconds. 
(Eg: A brick will fall on your head, Your cat will slap the taste out of you, etc.).

*/